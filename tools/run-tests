#! /bin/bash
set -e

abspath () {
	pushd "$1" > /dev/null
	local path=$(pwd)
	popd > /dev/null
	echo "${path}"
}


declare -r srcdir=$(abspath "${0%/*}/../")
declare -a tests=( )
declare -a fails=( )
declare -a okays=( )
declare -i current=0

for hi in "${srcdir}/test"/*.hi ; do
	name=${hi##*/}
	name=${name%.hi}
	tests=( "${tests[@]}" "${name}" )
done

declare -ir total=${#tests[@]}


if [[ -z ${DUMB_CONSOLE} || ${DUMB_CONSOLE} -eq 0 ]] ; then
	report_progress () {
		printf '[1G[K[%%%3i|+[1;32m%2i[0;0m|-[1;31m%2i[0;0m] %s ' \
			$(( 100 * ++current / total )) \
			${#okays[@]} \
			${#fails[@]} \
			"$1"
	}
else
	report_progress () {
		local status='ok'
		$2 || status='failed'

		printf '[%i/%i] %s (%s)\n' \
			$(( ++current )) \
			${total} \
			"$1" \
			${status}
	}
fi


for name in "${tests[@]}" ; do
	if [[ ${name} = fail-* ]] ; then
		expect_fail=true
	else
		expect_fail=false
	fi

	if "${srcdir}/tools/hipack-parse" "${srcdir}/test/${name}.hi" \
		2> "/tmp/hipack-$$-${name}.err" > /dev/null
	then
		if ${expect_fail} ; then passed=false ; else passed=true ; fi
	else
		if ${expect_fail} ; then passed=true ; else passed=false ; fi
	fi

	report_progress "${name}" ${passed}

	if ${passed} ; then
		okays=( "${okays[@]}" "${name}" )
	else
		fails=( "${fails[@]}" "${name}" )
		if [[ -s /tmp/hipack-$$-${name}.err ]] ; then
			cat "/tmp/hipack-$$-${name}.err"
		fi
	fi
	rm -f "/tmp/hipack-$$-${name}.err"
done
echo

echo "Total: ${total}"
echo "Passed: ${#okays[@]} ($(( 100 * ${#okays[@]} / total ))%)"
if [[ ${#fails[@]} -gt 0 ]] ; then
	echo "Failed: ${#fails[@]} ($(( 100 * ${#fails[@]} / total ))%)"
	for name in "${fails[@]}" ; do
		echo "  ${name}"
	done
fi
